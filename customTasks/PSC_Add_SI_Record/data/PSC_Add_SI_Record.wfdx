<?xml version="1.0" ?><OrchExportInfo><Time></Time><User>admin</User><Comments></Comments><UnifiedFeatureAssetInfo><addiInfo></addiInfo><featureAssetEntry><data><![CDATA[{"taskName":"PSC_Add_SI_Record","taskLabel":"PSC Add SI Record","isActive":true,"taskSummary":"This Custom adds a new record to an existing table in PSC","taskDescription":"Name: PSC_Add_SI_Record.js\nAuthor: Alejandro Madurga (almadurg@cisco.com)\nDate: 167h December 2015\nVersion: 1.0\nUCSD Version: 5.3\nPSC Version 11.1 (Virtual Appliance)\n\nDescription:\n\tThis Custom adds a new record to an existing table in PSC\n\t\n\t//INPUTS:\n\t\tPSCCredentials: [Credential Policy] Mandatory\n\t\tPSCIP: [Generic Text input] Mandatory\n\t\tSITableName: [Generic Text input] Mandatory\n\t\tSIData:[Generic Text Input] Mandatory, it should have the following format:\n\t\t[FieldName1]=[FieldValue1];[FieldName2]=[FieldValue2];\n\t\n\t//OUTPUTS\n\t\tNONE","taskDetails":"\r\n<------- Task Information ------->\r\nTask contains 6 inputs\r\n   PSCCredentials (Label: \'PSC Credentials\', Type: embedded-lov, MappableType: gen_text_input)\r\n   PSCIP (Label: \'PSC IP\', Type: text, MappableType: gen_text_input)\r\n   SITableName (Label: \'SI Table Name\', Type: text, MappableType: gen_text_input)\r\n   SIData (Label: \'SI Data\', Type: text, MappableType: gen_text_input)\r\n   action (Label: \'Action\', Type: embedded-lov, MappableType: gen_text_input)\r\n   Rollback (Label: \'Enable Rollback\', Type: boolean, MappableType: gen_text_input)\r\n\r\nTask contains 1 outputs\r\n   SITableData (Description: \'Table data for the given SI Table Name, XML Format\', Type: gen_text_input)\r\n\r\n","taskData":""}]]></data></featureAssetEntry><type>CUSTOM_TASKS</type></UnifiedFeatureAssetInfo><version>3.0</version></OrchExportInfo>